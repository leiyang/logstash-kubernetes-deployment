---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: logstash
  namespace: kube-system
  labels:
    k8s-app: logstash
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: logstash
  namespace: kube-system
  labels:
    k8s-app: logstash
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
  - "watch"
  - "list"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: logstash
  namespace: kube-system
  labels:
    k8s-app: logstash
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: logstash
  namespace: kube-system
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: logstash
  apiGroup: ""

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash
  namespace: kube-system
  labels:
    k8s-app: logstash
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
data:
  logstash.conf: |-
    input {
      beats {
        port => 5044
        codec => "json"
      }
      http {
        port => 5003
        codec => "json"
      }
    }
    output {
      elasticsearch {
        hosts => "${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"
        index => "logstash-%{+YYYY.MM.dd}"
        sniffing => false
      }
    }
  logstash.yml: |-
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
    xpack.monitoring.enabled: false

---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: kube-system
  labels:
    k8s-app: logstash
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile 
spec:
  selector:
    k8s-app: logstash
  ports:
  - port: 5044
    targetPort: 5044
    protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: kube-system
  labels:
    k8s-app: logstash
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: logstash
  template:
    metadata:
      labels:
        k8s-app: logstash
    spec:
      serviceAccountName: logstash
      containers:
      - image: docker.elastic.co/logstash/logstash:6.3.2
        name: logstash
        ports:
        - containerPort: 5044
          name: logstash
          protocol: TCP
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch-logging
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USER
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: changeme
        - name: logstash
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        volumeMounts:
        - name: config
          mountPath: /usr/share/logstash/config/logstash.yml
          subPath: logstash.yml
          readOnly: true
        - name: pipeline
          mountPath: /usr/share/logstash/pipeline
          readOnly: true
      volumes:
      - name: pipeline
        configMap:
          name: logstash
          items:
          - key: logstash.conf
            path: logstash.conf
      - name: config
        configMap:
          name: logstash
          items:
          - key: logstash.yml
            path: logstash.yml